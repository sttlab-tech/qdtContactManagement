services:
  postgresql:
    image: postgres:latest
    container_name: postgresql
    networks:
      - wm
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-vol:/var/lib/postgresql/data

  umserver:
    image: cp.icr.io/cp/webmethods/universalmessaging/universalmessaging-server:11.1.1
    container_name: umserver
    networks:
      - wm
    ports:
      - "9000:9000"
      - "9200:9200"
    env_file:
      - .env
    volumes:
      - um-data-vol:/opt/softwareag/UniversalMessaging/server/umserver/data
      - um-conf-vol:/opt/softwareag/common/conf
    healthcheck:
      interval: 5s
      retries: 12
      test: ["CMD-SHELL", "curl --silent http://localhost:9000/health/ | grep -q '\"ServerStatus\":\"OK\"'"]

  msr-contact-management:
    container_name: msr-contact-management
    image: msr-contact-management
    depends_on:
      - umserver
      - postgresql
    networks:
      - wm
    ports:
      - "15555:5555"
      - "15543:5543"
    volumes:
      - ./application.properties:/opt/softwareag/IntegrationServer/application.properties
      - $HOME/tls/sttlab.eu.jks:opt/softwareag/common/conf/sttlab.eu.jks
    env_file:
      - .env
    healthcheck:
      interval: 5s
      retries: 24
      test: ["CMD-SHELL", "curl -o /dev/null -s -w '%{http_code}' http://localhost:5555 | grep -qE '^(200|3[0-9]{2})$'"]

networks:
  wm:

volumes:
  postgres-vol:
  um-data-vol:
  um-conf-vol:
