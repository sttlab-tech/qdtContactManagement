name: Deploy to OpenShift

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Log in to OpenShift
      run: |
        kubectl config set-cluster openshift --server=$OPENSHIFT_SERVER_URL --insecure-skip-tls-verify=true
        kubectl config set-credentials github-actions --token=$OPENSHIFT_TOKEN
        kubectl config set-context openshift --cluster=openshift --namespace=$NAMESPACE --user=github-actions
        kubectl config use-context openshift
      env:
        OPENSHIFT_SERVER_URL: ${{ secrets.OPENSHIFT_SERVER_URL }}
        OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
        NAMESPACE: ${{ secrets.NAMESPACE }}

    - name: Check cluster access
      run: |
        kubectl get pods --namespace $NAMESPACE
      env:
        NAMESPACE: ${{ secrets.NAMESPACE }}

    - name: Install webMethods Helm charts
      run: |
        helm repo add webmethods https://ibm.github.io/webmethods-helm-charts/charts

    - name: Deploy using Helm
      run: |
        helm upgrade --install contact-management webmethods/microservicesruntime -f ./resources/helm/msr-values.yaml \
          --namespace $NAMESPACE --wait
      env:
        NAMESPACE: ${{ secrets.NAMESPACE }}

  newman_tests:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Newman
      run: |
        npm install -g newman

    - name: Run Newman Tests
      run: |
        sleep 60
        newman run ./resources/tests/ContactManagementAutomated.postman_collection.json -e ./resources/tests/ContactManagement.postman_environment.json \
          --env-var "url=$ROOT_CONTACTS_URL/rad/qdtContactManagement.api:ContactManagementAPI" \
          --env-var "userName=$CONTACTS_ADMIN_USERNAME" \
          --env-var "password=$CONTACTS_ADMIN_PASSWORD" \
          --insecure
      env:
        ROOT_CONTACTS_URL: ${{ secrets.ROOT_CONTACTS_URL }}
        CONTACTS_ADMIN_USERNAME: ${{ secrets.CONTACTS_ADMIN_USERNAME }}
        CONTACTS_ADMIN_PASSWORD: ${{ secrets.CONTACTS_ADMIN_PASSWORD }}